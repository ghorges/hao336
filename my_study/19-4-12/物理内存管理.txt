计算机体系结构

算术逻辑单元
寄存器
控制逻辑
高速缓存
存储管理单元(MMU)




内存层次:
cpu
L1缓存
L2缓存
(高速缓存未命中)
内存
(缺页)
外存(虚拟内存)


若干个进程,每个进程的逻辑地址是各是各的
抽象:
	逻辑地址空间(物理变逻辑地址)
保护:
	独立地址空间(每一个进程只能访问自己的)
共享:
	访问相同内存(操作系统内核)
虚拟化:
	更大的地址空间


内存管理的方式:
重定位	说的段地址+地址偏移,这样改段地址,这个程序就能运行了
分段	就比如代码段,堆栈段,数据段
分页	内存分为最基本的单位(就像盖楼房,一个砖)
虚拟存储	采用按需页式虚拟存储







地址空间和地址生成:
物理地址空间	硬件支持的地址空间


逻辑地址		cpu进程看到的地址




连续地址分配:
	内存碎片
	动态分配
		最先匹配
		最佳匹配
		最差匹配

外碎片:分配单元之间未被使用的内存(就可能太小了,没法利用)
内碎片:分配单元内部的未被使用内存,就比如是按512字节分配的,我只要510字节,剩下2字节就没得用了


连续内存分配:动态分区分配
操作系统维护数据结构:
	已分配的分区
	空闲分区

动态分区分配策略:
1.最先匹配
2.最佳匹配
3.最差匹配(每次都用最大的)

最先匹配就是一个一个找,找到一个比他大的,就切就好了,然后内核记录是哪个进程用的.留下个小的,这样缺点就是外碎片多.

最佳匹配,外碎片少

最差匹配,标记




















