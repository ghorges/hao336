void mydivide() throw (int ,char ,char *)
{}

如果写了，就只能抛出int,char,char *类型的异常
或者写有的类可以抛出他子类的异常


void mydivide() throw ()
{}

如果这样写，就是说这个函数不会抛出异常


如果不写，可以抛出任何类型异常


# 异常类型和异常变量的生命周期


如果抛的是字符串，因为字符串是个常量，所以在哪都可以用，所以抛出不影响


抛出类的时候，反正不管怎么样，后面都得写()  eg:throw aaa();


throw aaa();的时候会产生一个匿名对象，然后把匿名对象copy给e，就像函数那样
copy构造完，这个匿名对象就没了

但是如果是&拷贝构造，就会把这个匿名对象扶正，不会调用copy构造函数

如果是一个指针类型，则抛的时候得这样抛    throw new (aaa());
不能用&(aaa());		这个时候就是一个垃圾指针
但是new的时候，在上层函数还得delete。

所以一般用引用，用指针和普通的都不好，普通的会copy一次，浪费时间



