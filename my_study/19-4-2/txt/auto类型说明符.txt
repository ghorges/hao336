编程时常常需要把表达式的值赋值给变量
这就要求在声明变量的时候清楚的知道表达式的类型

c++11引入auto类型说明符，就能让编译器替我们去分析表达式所属的类型

***
auto能在一条语句中声明多个变量
但这条语句中所有变量的初始基本数据类型必须一样
const int 和 int 不一样


eg：
auto i = 0,*p = &i;
(对)
auto j = 11,k = 3.14;
(错误)

如果希望推断出的auto类型是一个顶层的const，需明确指出。
const auto f = 12;

auto &h = 42;	错误，不能为非常量引用绑定字面值
const auto &j = 42;	正确，可以为常量引用绑定字面值
（用int也一样）

decltype数据类型，希望从表达式推断出要定义的变量的类型
但是不想用该表达式的值初始化变量

decltype(f()) sum = x;

这个是看的结果类型；
int i = 42,*p = &i,&r = i;

decltype(r + 0)b;	正确，加法的结果是int，因此b是一个未初始化的int
decltype(*p)c;		错误，因为*p是一个引用，所以得初始化，没初始化就错误

还有：
decltype((i)) d;	错误，括号中还有个括号肯定是引用

有两个括号永远是引用！！！